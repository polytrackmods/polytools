name: Rust

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

env:
  CARGO_TERM_COLOR: always

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    steps:
    - name: Checkout source code
      uses: actions/checkout@v4

    - name: Install Rust
      uses: actions-rs/toolchain@v1
      with:
        toolchain: stable
        override: true
        profile: minimal

    - name: Install dependencies (SQLite + pkg-config)
      run: sudo apt install -y libsqlite3-dev pkg-config

    - name: Install diesel-cli
      run: cargo install diesel_cli --no-default-features --features sqlite

    - name: Set up project
      run: |
        ./setup.sh

    - name: Cache Cargo registry
      uses: actions/cache@v4
      with:
        path: |
          ~/.cargo/registry
          ~/.cargo/git
        key: cargo-registry-${{ hashFiles('**/Cargo.lock') }}
        restore-keys: |
          cargo-registry-

    - name: Cache build artifacts
      uses: actions/cache@v4
      with:
        path: target/poly*
        key: cargo-target-${{ hashFiles('**/Cargo.lock') }}
        restore-keys: |
          cargo-target-

    - name: Build the project
      run: cargo build --release

    - name: Run tests
      run: cargo test

    - name: Check formatting
      run: cargo fmt --all -- --check || echo "Encountered errors in format"

    - name: Lint with Clippy
      run: cargo clippy --all-targets --all-features -- -D warnings

    - name: Upload release binaries
      uses: actions/upload-artifact@v4
      with:
        name: binaries
        path: |
          target/release/poly*
          !target/release/*.d
          !target/release/*.rlib
        if-no-files-found: error
